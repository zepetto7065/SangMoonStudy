https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config
사용할 수 있는 외부 설정
    properties - Key/Value 형태 , @Value 로 불러올수 있다.
    YAML
    환경 변수
    커맨드 라인 아규먼트

- 테스트 코드 properties
    테스트 properties는 source 쪽 properties를 오버라이딩을 하고 빌드를 하기때문에
    항목이 일치하지 않으면 에러가 발생한다.

-프로퍼티 우선 순위
    1.유저 홈 디렉토리에 있는 spring-boot-dev-tools.properties
    2.테스트에 있는 @TestPropertySource
    3.@SpringBootTest 애노테이션의 properties 애트리뷰트
    4.커맨드 라인 아규먼트
    5.SPRING_APPLICATION_JSON (환경 변수 또는 시스템 프로티) 에 들어있는 프로퍼티
    6.ServletConfig 파라미터
    7.ServletContext 파라미터
    8.java:comp/env JNDI 애트리뷰트
    9.System.getProperties() 자바 시스템 프로퍼티
    10.OS 환경 변수
    11.RandomValuePropertySource
    12.JAR 밖에 있는 특정 프로파일용 application properties
    13.JAR 안에 있는 특정 프로파일용 application properties
    14.JAR 밖에 있는 application properties
    15.JAR 안에 있는 application properties
    16.@PropertySource
    17.기본 프로퍼티 (SpringApplication.setDefaultProperties)

-application.properties 우선 순위 (높은게 낮은걸 덮어 씁니다.)
    file:./config/  -> 프로젝트 바로 밑
    file:./         -> jar 파일 밑
    classpath:/config/ ->
    classpath:/        -> source resource 밑

    테스트 코드시 properties 사용한다면 @TestProperySource가 가장 안전
-랜덤값 설정하기
    ${random.*}
-플레이스 홀더
    name = keesun
    fullName = ${name} baik