객체와 관계형 데이터 베이스 매핑하기
어떻게 매핑할 것인가?
Entity Manager Factory 이하 EMF 이 고객의 요청에 따라 EM 생성을 한다.
EM 은 Data Connection을 통해 DB 사용

영속성 컨텍스트
엔티티를 영구 저장하는 환경 
DB에 저장한다는 것이 아닌 영속성 컨텍스트 에 저장한다. 
엔티티 매니저? 영속성 컨텍스트?
영속성 컨텍스트 ? 눈에 보이지 않는 논리적 개념 
엔티티매니저를 통해 영속성컨텍스트에 접근 , J2SE 환경 에서 엔티티매니저안에
영속성 컨텍스트가 1:1 로 만난다

엔티티의 생명주기
비영속(new/transient)
영속성 컨텍스트와 전혀 관계 없는 새로운 상태
//딱 셋팅만한 상태
Member member = new Member()
member.setId("member1")
member.setUsername("회원1")

준영속(detached)
영속성 컨텍스트에 저장되었다가 분리된 상태, 회원 엔티티를 영속성 컨텍스트에서 분리
em.detached(member)

영속(managed)
영속성 컨텍스트(entityManager)에 관리 되는 상태
//객체를 생성한 상태 (비영속)
Member member = new Member()
member.setId("member1")
member.setUsername("회원1")

EntityManager em = emf.createEntityManage();
em.getTransaction().begin();
//객체를 저장한 상태 (영속)
em.persist(member);


삭제(removed)
삭제된 상태
//객체를 삭제한 상태(삭제)
em.remove(member);

#영속성 컨텍스트의 이점
- 1차 캐시
- 동일성 보장
- 트랜잭션을 지연하는 쓰기 지연
- 변경감지
- 지연로딩
