JPA와 모던 자바 데이터 저장 기술

SQL 중심적인 개발의 문제점
SQL ? 데이터베이스는 SQL만 알아들을 수 있다. 
SQL 중심적 개발의 문제점
1. 무한반복, 지루한 코드
가령, 멤버테이블에 전화번호 라는 컬럼 추가시 모든 쿼리에 전부 전화번호를 추가해야한다
-> 의존적인 개발을 피하기 어렵다

2. 패러다임의 불일치
객체를 중심으로 생각해보면, 객체를 영구 보관하는 다양한 보관소가 무엇일까

객체와 관계형 데이터베이스의 차이
1. 상속
DB -> x ( 그나마 유사한 슈퍼/서브 타입 ), 객체 -> 상속관계
상속관계의 DB는 join해서 가져오는 방식을 여러번 해야한다. -> 번잡하다
DB가 아닌 Java 컬렉션에 저장을 한다면? 그냥 넣고 빼기만 하면 된다. 가령 list.get(a) 

2. 연관관계
DB -> join , 객체 -> 참조
객체는 참조를 사용, 테이블은 외래키를 사용
객체는 한방향, 테이블은 양방향 -> 차이가 있다
객체를 테이블에 맞추어서 모델링 

엔티티에 대한 신뢰 문제 
-> 코드를 까보지 않는 이상 신뢰하기 힘들다

그렇다고 모든 객체를 미리 로딩할 수는 없다

계층형 아키텍처 진정한 의미의 계층 분할이 어렵다


3. 데이터 타입


4. 데이터 식별 방법

비교하기 자바 컬렉션에서 조회
-> sql 에서 객체를 다를떄와 달리 같다.

객체를 자바 컬렉션에 저장하듯이 DB에 저장할 수 없을까? -> JPA
