1일차
- Nodejs란?

#책의 목표 
- axios
- csurf와 XSS 공격 대비
- 템플릿은 넌적스
- 이미지 리사이징에 대한 sharp
- 라이브러리 최신화

#노드의 정의
- 노드란? 크롬 V8 자바스크립트 엔진으로 빌드된 자바스크립트 런타임
- 런타임? 실행기다. 뭐를 ? 자바스크립트를 
- html 없이 스크립트를 실행시켜준다.
- 자바스크립드 문법 공부는 ko.javascript.info
- 자바스크립트는 c나 c++로 구성

#노드의 특성
- 이벤트 기반 ( 클릭, 네트워크 요청, 타이머 등)
- 이벤트 리스너 ( 이벤트를 등록하는 함수 )
- 콜백 함수 ( 이벤트가 발생했을 떄 실행되는 함수 )
- 논블로킹 I/O
- 싱글 스레드 (스레드 하나당 1코어)
 > 노드의 방식 > 장점은 코딩이 쉽다 ( 이상적으로 멀티 스레드 방식이 좋다. ), 멀티스레드를 안하려고 노드를 사용한다.
 > 그냥 그렇구나 정도로 이해하자.
- 노드는 주로 멀티 스레드 보다 멀티 프로세스
- 노드 14부터 멀티 스레드 가능

#서버로서의 노드
- 서버 : 네트워크를 통해 클라이언트에 정보나 서비스를 제공하는 컴퓨터 또는 프로그램
- 클라이언트 : 서버에 요청을 보내는 주체
- 노드는 서버를 구성할 수 있게 하는 모듈을 제공
- 노드의 가장 큰 장점 : 자바스크립트를 사용한다.

#노드 설치
- LTS 안정적인 버전 정신건강에 좋다 
> 14.15.1 (includes npm 6.14.8) 로 설치
- Tool은 VScode  
- mac에서(사실 어디든) node -v 로 확인
- npm i -g npm ( npm 업그레이드 그냥 참고)

####자바스크립트 문법####
# 호출 스택 
- 함수들을 호출 할 때, 스택을 상상해보자. 
- Anonymous 가상의 호툴 스택이 쌓인다.

# 이벤트 루프
- 호출 스택 -> 백그라운드
    ^          |
    |          V
     <-    태스크 큐
- 함수가 메모리 영역에 선언됨
- setTimeout 함수가 있다면 백그라운드로 이동
- 이떄 setTimeout 안에 함수는 태스크 큐로 이동
- 호출 스택 ,백그라운드 , 태스크 큐가 전부 비워져야 자바스크립트 실행 종료 

#var , const, let
- ES2015 이전에는 var 로 변수를 선언
- 기존 : 함수 스코프 (function(){})
- const : 변수에 = 을 못붙인다.
- 값을 바꾸고 싶을 때, let 

#템플릿 문자열 , 객체 리터럴
- const result = '이 과자는 ${won} 원입니다. '
